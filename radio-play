#!/bin/bash

set -e

# VARIABLES

# modify this according to your preferences

MKDIR=/usr/bin/mkdir # IMPORTANT! MKDIR executable command path (must be correctly set)
EGREP=/usr/bin/egrep # IMPORTANT! EGREP executable command path (must be correctly set)
RM=/usr/bin/rm # IMPORTANT! RM executable command path (must be correctly set)

CONFIG_HOME=${XDG_CONFIG_HOME:-${HOME}/.config}

SCRIPT_CONFIG_DIR=${CONFIG_HOME}/radio-play

CONFIG_FILE_MAIN=${SCRIPT_CONFIG_DIR}/main.conf
CONFIG_FILE_RADIOS=${SCRIPT_CONFIG_DIR}/radios.conf

RECORD_FILE=/tmp/radio-play-station

# everything below here should not need to be modified in order for the program to run correctly

## preparing the smooth running of this script

${MKDIR} -p ${SCRIPT_CONFIG_DIR}

create_config_main_file() {
	printf 'PLAYER_COMMAND="/usr/bin/mpv --really-quiet"

PLAYER_NO_VIDEO_FLAG=--no-video


# ALL PROGRAMS NEEDED FOR THIS SCRIPT TO WORK
# this program was made in a Linux OS, so the needed programs may already be correctly set if you are on a Linux system (even if you are not on a Linux this dependency programs variables may be correctly set)

# YOU COULD DEFINE PROGRAMS WITH ITS CORRESPONDING FULLPATH OR JUST THE PROGRAM NAME.
# IF YOU DEFINE JUST THE PROGRAM NAME IN ANY OF THE VARIABLES BELOW YOU ALSO HAVE TO SET THE VARIABLE: PROGRAMS_PATH (read below)

YOUTUBE_DL=youtube-dl

BASENAME=basename
DIRNAME=dirname
CUT=cut
WHICH=which
DIRNAME=dirname
PKILL=pkill
NOTIFY_SEND=notify-send
SED=sed
WC=wc
TOUCH=touch
CURL=curl
HEAD=head
RM=rm

# if you dont set the fullpath in any of the variables above (except YOUTUBE_DL), you have to define all of the variables directory names in the variable PROGRAMS_PATH below

PROGRAMS_PATH="/usr/bin" # PATH OF THE DIRECTORY OF THE PROGRAMS ABOVE (YOUTUBE_DL variable path is the only one that will be set automatically. so no need to include it in this variable)
' > ${CONFIG_FILE_MAIN}

	return 0
}

sanitize_and_import_conf_file() {
	source <( ${EGREP} '[[:alnum:]]=[[:print:]]' $1 )
	#source <( ${EGREP} '[[:alnum:]]=[\/"_'"'--[:alnum:]]" $1 ) # this is equivalent, not as general. works today and may work for the future
}


[ ! -f ${CONFIG_FILE_MAIN} ] && create_config_main_file


sanitize_and_import_conf_file ${CONFIG_FILE_MAIN}


YOUTUBE_DL_DIRECTORY="$(${DIRNAME} ${YOUTUBE_DL})"

PATH="${PROGRAMS_PATH}:${YOUTUBE_DL_DIRECTORY}"


[ -f ${CONFIG_FILE_RADIOS} ] && sanitize_and_import_conf_file ${CONFIG_FILE_RADIOS}

${TOUCH} ${RECORD_FILE}



# CHECK FOR PROGRAMS DEPENDENCIES

## all the commands variables above (commands dependencies) for this script
DEPS="${YOUTUBE_DL} ${MKDIR} ${EGREP} ${DIRNAME} ${BASENAME} ${CUT} ${WHICH} ${PKILL} ${SED} ${WC} ${TOUCH} ${CURL} ${HEAD} ${NOTIFY_SEND}"

## add to DEPS the PLAYER_COMMAND
DEPS+=" $(echo ${PLAYER_COMMAND} | ${CUT} -d' ' -f1)"


for dep in $DEPS; do
	! ${WHICH} $(${BASENAME} ${dep}) > /dev/null 2>&1 && echo -e "ERROR: command ${dep} can't be found.\nYou may need to install ${dep} to make this program work." && exit 4
	if [ $(${DIRNAME} ${dep}) != . ]; then
		[ ! -f ${dep} ] && echo "ERROR: ${dep} is not a valid file in ${CONFIG_FILE_MAIN}." && exit 9
	fi
done



# FUNCTIONS

escape() {
	printf '%q' $1
}

play() {
	${PLAYER_COMMAND} $1 > /dev/null 2>&1 &
}

play_no_video() {
	${PLAYER_COMMAND} ${PLAYER_NO_VIDEO_FLAG} $1 > /dev/null 2>&1 &
}

stop_play() {
	ESCAPED_INPUT="$(escape $1)"
	
	${PKILL} -9 -f "${ESCAPED_INPUT}" &

	# it needs return 0 because pkill doesnt return 0
	return 0
}

capitalize() {
	STRING="$1"
	printf ${STRING^}
}

get_current_playing_station() {
	CURRENT_STATION=$(cat ${RECORD_FILE})
	printf ${CURRENT_STATION}
}

notificate_shell() {
	echo -e "TITLE: $1\nMESSAGE: $2"
}

notificate_system_popup_message() {
	${NOTIFY_SEND} "$1" "$2" --icon=$3
}

notificate() {
	FLAG="$1"
	STATION="$2"

	TITLE="# "
	if [ ! -z ${STATION} ];then
		is_string_a_url ${STATION} && TITLE=${STATION} || TITLE+=$(capitalize ${STATION})
	fi

	ICON="dialog-information"

	case ${FLAG} in

		START)
			MESSAGE="this radio has started"
			;;

		STOP)
			MESSAGE="this radio has been stopped"
			;;

		ERROR_ALREADY_PLAYING)
			TITLE="ERROR:"
			MESSAGE="$(get_current_playing_station) radio is already playing"
			ICON="attention"
			;;
		NOT_ONLINE)
			TITLE="ERROR:"
			MESSAGE="${STATION} doesn't give a valid http response (may be offline)"
			ICON="attention"
			;;
	esac

	notificate_system_popup_message "${TITLE}" "${MESSAGE}" ${ICON}
	# notificate_shell "${TITLE}" "${MESSAGE}" ${ICON}
}	

does_station_record_exist() {
	ESCAPED_INPUT=$(escape $1)
	${EGREP} -qw ${ESCAPED_INPUT} ${RECORD_FILE} && return 0 || return 1
}

is_station_playing() {
	if does_station_record_exist $1 ; then
		return 0
	else
		return 1
	fi
}


remove_station_record() {
	if does_station_record_exist $1 ; then
		#${SED} -i -e "s|$1||g" ${RECORD_FILE}
		${SED} -i 'd' ${RECORD_FILE} # deletes all the lines of $RECORD_FILE
	fi
}

turn_off_station() {
	remove_station_record ${2:-${1}}
	stop_play $1
}

add_station_record() {
	if ! does_station_record_exist $1 ; then
		echo "$1" >> ${RECORD_FILE}
	fi
}

is_radio_already_playing() {
	(( $(${WC} -l < ${RECORD_FILE} ) >= 1 )) && return 0 || return 1
}

turn_on_station() {
	if is_radio_already_playing; then
		notificate "ERROR_ALREADY_PLAYING"
		exit 2
	fi

	add_station_record ${2:-${1}}
	if [ -z ${VIDEO+x} ]; then
		play_no_video $1
	else
		play $1
	fi
}

is_string_a_url() {
	#REGEX="^[a-z](?:[-a-z0-9\+\.])*:(?:\/\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:])*@)?(?:\[(?:(?:(?:[0-9a-f]{1,4}:){6}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|::(?:[0-9a-f]{1,4}:){5}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){4}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,1}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){3}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,2}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:){2}(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,3}[0-9a-f]{1,4})?::[0-9a-f]{1,4}:(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,4}[0-9a-f]{1,4})?::(?:[0-9a-f]{1,4}:[0-9a-f]{1,4}|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3})|(?:(?:[0-9a-f]{1,4}:){0,5}[0-9a-f]{1,4})?::[0-9a-f]{1,4}|(?:(?:[0-9a-f]{1,4}:){0,6}[0-9a-f]{1,4})?::)|v[0-9a-f]+\.[-a-z0-9\._~!\$&'\(\)\*\+,;=:]+)\]|(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])(?:\.(?:[0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])){3}|(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=])*)(?::[0-9]*)?(?:\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@]))*)*|\/(?:(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@]))+)(?:\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@]))*)*)?|(?:(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@]))+)(?:\/(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@]))*)*|(?!(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@])))(?:\?(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@])|[\x{E000}-\x{F8FF}\x{F0000}-\x{FFFFD}\x{100000}-\x{10FFFD}\/\?])*)?(?:\#(?:(?:%[0-9a-f][0-9a-f]|[-a-z0-9\._~\x{A0}-\x{D7FF}\x{F900}-\x{FDCF}\x{FDF0}-\x{FFEF}\x{10000}-\x{1FFFD}\x{20000}-\x{2FFFD}\x{30000}-\x{3FFFD}\x{40000}-\x{4FFFD}\x{50000}-\x{5FFFD}\x{60000}-\x{6FFFD}\x{70000}-\x{7FFFD}\x{80000}-\x{8FFFD}\x{90000}-\x{9FFFD}\x{A0000}-\x{AFFFD}\x{B0000}-\x{BFFFD}\x{C0000}-\x{CFFFD}\x{D0000}-\x{DFFFD}\x{E1000}-\x{EFFFD}!\$&'\(\)\*\+,;=:@])|[\/\?])*)?$"
	REGEX="(https?|ftp|file)://[-A-Za-z0-9\+&@#/%?=~_|!:,.;]*[-A-Za-z0-9\+&@#/%=~_|]"

	[[ $1 =~ ${REGEX} ]] && return 0 || return 1
}

is_url_online() {
	${CURL} -s --head $1 | ${HEAD} -n 1 | ${EGREP} "HTTP/1.[01] [23].." > /dev/null
	return $?
}

# MAIN

## argument processing

while [ ! $# -eq 0 ]
do
	case "$1" in
		--help | -h)
			print_help
			exit 0
			;;
		--recreate)
			${RM} -Rf ${SCRIPT_CONFIG_DIR}/*
			create_config_main_file
			exit 0
			;;
		--video)
			VIDEO=y
			;;
	esac
	RESOURCE=$1
	shift
done


## if argument is a url, set it as the argument, else alias (from $CONFIG_FILE_RADIOS) substitution
is_string_a_url ${RESOURCE} && LINK=${RESOURCE} || LINK=${!RESOURCE}

if [ -z ${LINK} ]; then
	echo -e "ERROR: the alias '${RESOURCE}' is not set in the ${CONFIG_FILE_RADIOS} file.\n\nYou may want to add '${RESOURCE}=http://some-radio-stream-URL/...' to this file. It also accepts Youtube Live URLS! ( for example, http://www.youtube.com/watch?v=hHW1oY26kxQ )"
	exit 7
fi

if ! is_string_a_url ${LINK}; then
	echo "ERROR: the argument '${RESOURCE}' corresponds to '${LINK}' which is not a valid link."
	exit 8
fi

STATION=${RESOURCE}

## check if url is not online

#! is_url_online ${LINK} && ( notificate "NOT_ONLINE" "${LINK}"; exit 3 )


## play station

if is_station_playing ${STATION} ; then
	turn_off_station ${LINK} ${STATION}
	notificate "STOP" "${STATION}" 
	
	exit 0
else
	turn_on_station ${LINK} ${STATION}
	notificate "START" "${STATION}" 

	exit 0
fi

exit 1
